Прежде чем запускать установите:
PostgreSQl 13 это с их официального сайта скачать надо
peewee и pandas - либы, их можно установить через pip

Для работы именно с вашей локальной бд поменяйте значение password в 9 строке на ваш пароль, 
который вы задали при установке PostgreSQl

!peewee так работает что для работы с таблицами вам не обязательно создавать соответсвующие объекты
можете обращаться MPK.insert_one(...) и всё будет работать

Чтобы создать и проинициализировать таблицы МПК и архива:
1. в папку с файлом db.py кидаем archive.csv и Сигналы.xlsx
2. важно чтобы Сигналы.xlsx вы взяли из моего репозитория или сами поменяли названия столбцов Xmax и Xmin на Xmax_ и Xmin_ соответственно
(просто в PostgreSQl эти имена зарезервированы и с такми именами таблицу он не создаст)
3. запускаете db.py 

!!! MPK.insert_one
Класс MPK имеет метод insert_one который меняет значение в указанной клетке на ваше и возвращает то, что там было до вставки
вствака по id элемента и столбцу
id - int
column - str
value - str или int в зависимости от тип данных столбца таблицы
Пример: MPK.insert_one(id = 5, column = 'KKS', value = 'abc')

Итак, в файле описаны классы таблиц и класс для взаимодействия с ними (DatabaseManipulation)
db - хз что за тип крч пишите pg_db и всё будет ок (см строку 13)
current_table и archive - классы таблиц текущей и архива соответственно
Пример my_tables = DatabaseManipulation(db = pg_db, current_table = MPK, archive = Archive)

Методы create_tables/drop_tables создают/удаляют таблицы
list_of_tables - массив классов таблиц
Пример: my_tables.create_tables([MPK])

Метод insert_many вставляет множество значений в таблицу
data - массив словарей, в кадом словаре ключ - название столбца, значение - значение). Можно не указывать столбец тогда его значение будет NULL
Пример: my_tables.insert_many([{'id_kks': 13 ,'KKS': 'sdhnc'}])

Метод insert_one работает по аналогии с MPK.insert_one и работает только с таблицей MPK,
вставляет значение в MPK а предыдущее пихает в архив, который вы указали

Метод delete_row удаляет строку из текущей таблици с номером id_kks который вы укажете 
id_kks - int
Пример: my_tables.delete_row(13)

Метод select_column возвращает список значений колонки, можно искать по условию
Пример: Archive.select_column('value', 'id_kks', 20))